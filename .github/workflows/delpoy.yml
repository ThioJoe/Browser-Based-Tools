# .github/workflows/deploy.yml

name: Deploy to GitHub Pages

# Run this workflow every time you push a change to your 'main' branch
on:
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # --- Step 1: Check out the 'main' branch ---
      # This downloads your main branch code into the workflow runner.
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          path: main # Checkout to a 'main' subdirectory

      # --- Step 2: Check out the 'caches' branch ---
      # This downloads your caches branch into a different subdirectory.
      # This step will fail if the 'caches' branch doesn't exist yet, which is fine on the first run.
      - name: Checkout caches branch
        uses: actions/checkout@v4
        with:
          ref: caches
          path: caches # Checkout to a 'caches' subdirectory
        continue-on-error: true

      # --- Step 3: Combine the files ---
      - name: Combine files
        run: |
          # Create a 'public' directory to hold the final website files
          mkdir -p public
          
          # Copy everything from the 'main' branch checkout, IGNORING dotfiles
          cp -r ./main/* ./public/
          
          # If the caches directory exists, copy its contents, IGNORING dotfiles
          if [ -d "./caches" ]; then
            cp -r ./caches/* ./public/
          fi
          
      # --- Step 4: Upload the combined site ---
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      # --- Step 5: Deploy to GitHub Pages ---
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
